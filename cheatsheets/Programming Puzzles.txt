##Problem 1 : Multiples of 3 and 5
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. 
The sum of these multiples is 23.Find the sum of all the multiples of 3 or 5 below 1000.

Solution: 233168
Multiples of 3 or 5 give a modulo of zero = perfect division - no decimals left behind
$ awk 'BEGIN{for (i=1;i<1000;i++) {if (i%3==0 || i%5==0) {print i;sum+=i}};print sum}'

Golfing Solutions: 
$ awk '$1%3==0 || $1%5==0{sum+=$1}END{print sum}' <(seq 999)
$ awk '!($1%3) || !($1%5){sum+=$1}END{print sum}' <(seq 999)
$ awk '($1%3 && $1%5)==0{sum+=$1}END{print sum}' <(seq 999)
$ awk '!($1%3 && $1%5){sum+=$1}END{print sum}' <(seq 999)

##Problem 2:Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

Solution: sum=4613732

awk 'BEGIN{
           t1=1;t2=2;sum=2;
           while (t3<=4000000) {
                                t3=t1+t2;
                                print t3;
                                t1=t2;
                                t2=t3;
                                if ( (t3%2==0) && t3<=4000000) {
                                                                printf "sum=" sum "+" t3 "=";
                                                                sum+=t3;
                                                                printf sum "\n"
                                                                }
                                }
           {print "sum=" sum}
          }'
          
 
##Problem 3: Largest prime factor
The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?

Solution: 6857

Solving:
We need the largest perfect divider which is prime number.
We first get the perfect dividers and then we test (brutforce) if those divides are prime number.
A prime number can have only two perfect dividers : 1 and itself. So if dividers > 2 it is not a prime number.

awk 'BEGIN{
           n=13195;
           print sqrt(n);
           found=1;
           for (i=found;i<=sqrt(n);i++) {                                                 # Acc to prime numbers theory, iterating up to square root of the given number is enough to determine prime numbers.
																						  # Beyond square root we have products of the early found dividers.	
                                         div=0;
                                         if (n%i==0) {                                     #If a perfect divider is found, check if it is a prime number
                                                      found2=1;
                                                      for (k=found2;k<=i;k++)              #Brute force
                                                          if (i%k==0) {                    #Modulo check
                                                                       found2=k;
                                                                       if (div++==3) break; #prime numbers can have only two perfect dividers
                                                                       }
                                                      };
                                          if (div==2) {                                     #If the perfect divider has two perfect dividers then it is a prime number
                                                       print i;found=i;
                                                       }
                                           }
            }'

114.869 #Square Root of input number n
5
7
13
29

Similarilly:
# awk 'BEGIN{n=600851475143;print sqrt(n);found=1;for (i=found;i<=sqrt(n);i++) {div=0;if (n%i==0) {found2=1;for (k=found2;k<=i;k++) \
            if (i%k==0) {found2=k;if (div++==3) break}}; if (div==2) {print i;found=i}}}'

775146   #Square Root of n
71
839
1471
6857


##Problem 4 : Largest palindrome product
A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
Find the largest palindrome made from the product of two 3-digit numbers.

Solution:906609
$ while read -r string;do if [[ $(rev <<< $string) == "$string" ]]; then echo "$string";fi;done < <(awk 'BEGIN{for (i=900;i<=999;i++) {for (k=900;k<=999;k++) print i*k}}') |sort -u
819918
824428
861168
886688
888888
906609

